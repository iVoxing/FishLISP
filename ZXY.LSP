(setq axi_num_layer "paxinum")
(if (tblsearch "layer" axi_num_layer) nil (load "reini"))
(setq axi_num_layer nil)

(defun C:RENUM (/ os cl ss ssl sc n en en1 en2 sn sn1 number nnmuber axi_num_layer attr) 
	(setq 
		os (getvar "osmode")
		sc (getvar "dimscale")
		cl (getvar "clayer")
		attr (getvar "attreq")
		axi_num_layer "paxinum"
	)
	(setvar "attreq" 1)
	(setvar "CMDECHO" 0)
	(setvar "BLIPMODE" 0)
	(setvar "osmode" 0)
	(setq ss (ssget '((0 . "insert") (2 . "axi*"))))
	(if ss 
		(setq ssl (sslength ss) n 0)
		(setq ssl 0)
	)
	(setvar "clayer" axi_num_layer)
	(repeat ssl 
		(setq en (entget (setq sn (ssname ss n))))
		(setq insp (cdr (assoc 10 en)))
		(setq en1 (entget (setq sn1 (entnext sn))))
		(setq en2 (entget (entnext sn1)))
		(princ "\nNew Nummber <")
		(princ (setq number (cdr (assoc 1 en1))))
		(setq nnumber (strcase (getstring ">:")))
		(if (= nnumber "") (setq nnumber number))
		(cmd "erase" sn "")
		(if (> (strlen nnumber) 1) 
			(cmd "insert" "axi" (trans insp 0 1) sc "" 0 nnumber)
			(cmd "insert" "axi0" (trans insp 0 1) sc "" 0 nnumber)
		)
		(setq n (1+ n))
	)
	(setvar "clayer" cl)
	(setvar "CMDECHO" 1)
	(setvar "BLIPMODE" 1)
	(setvar "osmode" os)
	(setvar "attreq" attr)
	(princ)
)

(defun C:INSNUM (/ olderr os cl sc sp ep number ins ang axi_num_layer attr) 
	(setq olderr *error*)
	(defun *error* (s) 
		(if os (setvar "osmode" os))
		(if cl (setvar "clayer" cl))
		(if attr (setvar "attreq" attr))
		(setvar "cmdecho" 1)
		(setvar "blipmode" 1)
		(setq *error* olderr olderrnil)
		(princ)
	)
	(setq 
		os (getvar "osmode")
		sc (getvar "dimscale")
		cl (getvar "clayer")
		attr (getvar "attreq")
		axi_num_layer "paxinum"
	)
	(setvar "attreq" 1)
	(setvar "CMDECHO" 0)
	(setvar "BLIPMODE" 0)
	(setvar "clayer" axi_num_layer)
	(setq loop t)
	(while loop 
		(setvar "osmode" 167)
		(setq sp (getpoint "\nStart Point: "))
		(if sp (setq ep (getpoint sp "\nEnd Point: ")) (setq loop nil))
		(if ep (setq number (getstring "\nNummber: ")) (setq loop nil))
		(if number 
			(progn 
				(setq 
					number (strcase number)
					ins(polar ep (setq ang (angle sp ep)) (* sc 4))
				)
				(if (> (strlen number) 1) 
					(progn 
						(cmd "line" sp ep "")
						(setvar "osmode" 0)
						(cmd "insert" "axi" ins sc "" 0 number)
					)
					(progn 
						(cmd "line" sp ep "")
						(setvar "osmode" 0)
						(cmd "insert" "axi0" ins sc "" 0 number)
					)
				)
			)
			(setq loop nil)
		)
	)
	(setq *error* olderr)
	(setvar "clayer" cl)
	(setvar "CMDECHO" 1)
	(setvar "osmode" os)
	(setvar "attreq" attr)
	(princ)
)

(defun C:INSAXIS (/ cl sp ep) 
	(setvar "cmdecho" 0)
	(setvar "blipmode" 0)
	(setq cl (getvar "clayer"))
	(cmd "layer" "m" "paxis" "c" "1" "paxis" "lt" "acad_iso04w100" "paxis" "")
	(setq 
		sp (getpoint "\nStart point:")
		ep (getpoint sp "\nEnd point:")
	)
	(cmd "line" sp ep "")
	(setvar "clayer" cl)
	(setvar "blipmode" 1)
	(setvar "cmdecho" 1)
	(princ)
)

(princ "loaded. Start as C:INSNUM C:RENUM C:INSAXIS ")
(princ)
