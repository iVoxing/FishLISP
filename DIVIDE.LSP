(defun dvlin (/ pt1 pt2 lay ang dis count pt3)
	(setq 
		pt1 (cdr (assoc 10 ent))
		pt2 (cdr (assoc 11 ent))
		lay (cdr (assoc 8 ent))
		ang (angle pt1 pt2)
		dis (distance pt1 pt2)
		count (getint "\nHow many times to divide:")
		dis (/ dis count)
		pt3 (polar pt1 ang dis)
	)
	(entmod (subst (cons 11 pt3) (assoc 11 ent) ent))
	(repeat (1- count)
		(setq pt1 pt3 pt3 (polar pt1 ang dis))
		(entmake (list
			(cons 0 "line")
			(cons 8 lay)
			(cons 10 pt1)
			(cons 11 pt3)
		))
	)
)

(defun dvarc (/ cen rad lay ang1 ang2 ang count)
	(setq 
		cen (cdr (assoc 10 ent))
		rad (cdr (assoc 40 ent))
		lay (cdr (assoc 8 ent))
		ang1 (cdr (assoc 50 ent))
		ang2 (cdr (assoc 51 ent))
		count (getint "\nHow many times to divide:")
		ang (/ (- ang2 ang1) count)
	)
	(entdel (cdr (assoc -1 ent)))
	(repeat count
		(setq ang2 (+ ang1 ang))
		(entmake (list 
			(cons 0 "ARC")
			(cons 8 lay)
			(cons 10 cen)
			(cons 40 rad)
			(cons 50 ang1)
			(cons 51 ang2)
		))
		(setq ang1 ang2)
	)
	(princ)
)

(defun c:div (/ ent)
	(while (not ent)
		(setq ent (entsel "\nSelect Line or ARC to edit:"))
	)
	(setq ent (entget (car ent)))
	(cond 
		((= (cdr (assoc 0 ent)) "LINE")
			(dvlin)
		)
		((= (cdr (assoc 0 ent)) "ARC")
			(dvarc)
		)
		((and (/= (cdr (assoc 0 ent)) "LINE") (/= (cdr (assoc 0 ent)) "ARC"))
			(princ "\nWhat you select is neither Line nor ARC.")
		)
	)
	(princ)
)
