(defun c:ddr (/ olderr ucsf os undo_id en ddr_check reins_dr_1 reins_dr_2)
	(princ "\nFishLISP. 12/24/1997.")
	(princ "\nChange direction of Doors. v2.1. ")

	(setq odlerr *error*)
	(defun *error* (s)
		(setvar "osmode" (if os os 167))
		(setq *error* olderr olderr nil)
		(princ)
	)

	(setvar "cmdecho" 0)
	(fl_undo_begin)
	(setq ucsf (getvar "ucsfollow"))
	(setvar "ucsfollow" 0)
	(setvar "expert" 4)
	(cmd "ucs" "s""$temp$")
	(cmd "ucs" "w")

	(defun ddr_check (en / bkname bkins bksc bkang dw_xdt bklist clay)
		(setq 
			ent 	(entget en)
			bkname	(strcase (cdr (assoc 2 ent)))
			bkins	(cdr (assoc 10 ent))
			bksc	(cdr (assoc 41 ent))
			bkang	(/ (* (cdr (assoc 50 ent)) 180.0) pi)
			dw_xdt(assoc -3 (entget en '("FISH_WALL")))
		)
		(entdel en)
		(setq clay (getvar "clayer"))
		(setvar "clayer" FLLT_DOOR)
		(cond
			((member bkname (list "DR1" "DR2" "DR7" "DR8"))
				(reins_dr_1)
			)
			((member bkname (setq bklist (list "DR3" "DR4" "DR5" "DR6")))
				(reins_dr_2)
			)
			( t (princ "\n1 was unknown Door type. "))
		)
		(setvar "clayer" clay)
	)

	(defun reins_dr_1 (/ dr_new)
		(cond
			((= bkname "DR1") (setq dr_new "DR2"))
			((= bkname "DR2") (setq dr_new "DR1"))
			((= bkname "DR7") (setq dr_new "DR8"))
			((= bkname "DR8") (setq dr_new "DR7"))
		)
		(cmd "insert" dr_new bkins bksc bksc bkang)
		(if dw_xdt (entmod (append (entget (entlast)) (list dw_xdt))))
	)

	(defun reins_dr_2 (/ ss n en)
		(setq ss (ssadd))
		(foreach n bklist
			(cmd "insert" n bkins bksc bksc bkang)
			(if dw_xdt (entmod (append (entget (entlast)) (list dw_xdt))))
			(setq ss (ssadd (entlast) ss))
		)
		(setq en (entsel "\n>>Pick the door to be kept: "))
		(if en (cmd "erase" ss "r" (car en) ""))
	)

	(setq os (getvar "osmode"))
	(setvar "osmode" 0)
	(setvar "cmdecho" 0)
	(setq undo_id 0)
	(setq loop t)
	(while loop
		(initget "Undo")
		(setq en (entsel "\n[Undo] <Pick a Door>: "))
		(cond
			((= en "Undo")
				(if (< undo_id 1)
					(princ "\nCommand has been completely undone. ")
					(progn
						(fl_undo_end)
						(cmd "undo" "")
						(setq undo_id (1- undo_id))
					)
				)
			)
			((not en) (setq loop nil))
			((/= (cdr (assoc 0 (entget (car en)))) "INSERT")
				(princ "\n1 was not an Insert. ")
			)
			((/= (strcase (substr (cdr (assoc 2 (entget (car en)))) 1 2)) "DR")
				(princ "\n1 was unknown Door type. ")
			)
			( t
				(fl_undo_begin)
				(ddr_check (car en))
				(fl_undo_end)
				(setq undo_id (1+ undo_id))
			)
		)
	)
	(setvar "osmode" os)
	(cmd "ucs" "r" "$temp$")
	(cmd "ucs" "d" "$temp$")
	(setvar "ucsfollow" ucsf)
	(fl_undo_end)
	(setvar "expert" 0)
	(setvar "cmdecho" 1)
	(princ)
)

(princ "loaded. Start as C:DDR. ")
(princ)